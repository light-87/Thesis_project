# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to include the gitignore file.
.idea/

# VS Code
.vscode/

# Spyder
.spyderproject
.spyproject

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.tmp
*.temp
Desktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# Data files (add specific patterns as needed)
*.csv
*.tsv
*.xlsx
*.xls
*.pkl
*.pickle
*.hdf5
*.h5
*.parquet

# Model files
*.pt
*.pth
*.ckpt
*.safetensors
*.bin
*.joblib

# Large datasets
data/
data/raw/
data/processed/
data/external/
data/interim/

# Experiment outputs
# experiments/
results/
outputs/
logs/
runs/
wandb/

# Checkpoints and saved models
checkpoints/
saved_models/
# models/

# Temporary files
tmp/
temp/
.tmp/

# Jupyter notebook outputs (keep notebooks but not outputs)
**/outputs/
**/.ipynb_checkpoints

# Research specific
papers/
references/
literature/

# Configuration files with secrets
config/secrets.yaml
config/local_config.yaml
.env.local
.env.production

# Weights & Biases
wandb/

# MLflow
mlruns/
mlartifacts/

# TensorBoard
runs/
tensorboard_logs/

# Hydra
outputs/
.hydra/

# DVC (Data Version Control)
.dvc/
.dvcignore

# Pytest
.pytest_cache/

# Coverage
.coverage
htmlcov/

# Profiling
*.prof
*.lprof

# Memory profiling
*.mprof

# GPU cache
.nv/

# HuggingFace cache
.cache/huggingface/
.cache/torch/
transformers_cache/

# Downloaded models and datasets
downloads/
cache/

# Backup files
*.bak
*.backup
*.old

# Compressed files
*.zip
*.tar.gz
*.rar
*.7z

# Log files
*.log
*.out
*.err

# Slurm job files
slurm-*.out
slurm-*.err
*.sbatch

# SSH keys
*.pem
*.key
id_rsa*
id_ed25519*

# Database files
*.db
*.sqlite
*.sqlite3

# Screenshots and images (unless needed for docs)
screenshots/
*.png
*.jpg
*.jpeg
*.gif
*.svg
# Exception: keep documentation images
!docs/**/*.png
!docs/**/*.jpg
!docs/**/*.jpeg
!docs/**/*.gif
!docs/**/*.svg

# Video files
*.mp4
*.avi
*.mov
*.mkv

# Audio files
*.wav
*.mp3
*.flac

# Ignore example data but keep structure
data/examples/*.csv
data/examples/*.txt
data/examples/*.fasta
# Keep example structure
!data/examples/.gitkeep
!data/examples/README.md

# Ignore user-specific configs
config/user_*.yaml
config/*_local.yaml

# Ignore development databases
dev.db
test.db

# Ignore compiled documentation
docs/_build/
docs/build/

# Ignore auto-generated API docs
docs/api/

# Keep important empty directories
!**/.gitkeep